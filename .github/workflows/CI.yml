name: "CI"
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  golang_lint:
    name: golang_lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: false
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          # Require: The version of golangci-lint to use.
          # When `install-mode` is `binary` (default) the value can be v1.2 or v1.2.3 or `latest` to use the latest version.
          # When `install-mode` is `goinstall` the value can be v1.2.3, `latest`, or the hash of a commit.
          version: v1.54

  tests:
    needs: golang_lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
    - name: Build
      run: go build -v ./...
    - name: Test
      run: go test -v ./...

  
  build-and-push-docker:
    needs: golang_lint
    name: build-and-push-docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: name/app          
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
      - name: Build and push to Docker Hub and GitHub Container Registry
        uses: docker/build-push-action@v5
        with:
          context: .
          #file: ./infra/Dockerfile
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.USERNAME }}/tg_bot_trading:latest
            ${{ secrets.USERNAME }}/tg_bot_trading:${{ github.sha }}
          labels: ${{ steps.meta.outputs.labels }}
