stages:
  - test
  - publish
  - deploy

variables:
  FLASK_IMAGE: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/go_example:$CI_COMMIT_SHORT_SHA
  FLASK_LATEST: $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG/go_example
#############################################################################################
test:
  image: python:3.10-alpine3.15
  stage: test
  allow_failure: true
  tags:
    - deployment
  script:
    - pip install --upgrade pip
    - pip install pylint
    - pip install --no-cache-dir --upgrade -r ./requirements.txt
    - pylint `ls -R|grep .py$|xargs`
  only:
    - master
#############################################################################################
publish:
  image: docker:latest
  stage: publish
  tags:
    - deployment
  services:
    - docker:dind
  script:
    - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
    - docker build -t $FLASK_LATEST -t $FLASK_IMAGE .
    - docker push $FLASK_LATEST
    - docker push $FLASK_IMAGE
  only:
    - master
#############################################################################################
# deploy:
#   image: alpine:latest
#   stage: deploy
#   tags:
#     - deployment
#   before_script:
#     - apk update && apk add openssh-client && apk add coreutils && apk add --no-cache docker-compose
#     - chmod og= $ID_RSA
#     - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
#   script:
#     - scp -i $ID_RSA -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -r docker-compose.yml $SERVER_USER@$SERVER_IP:/home/deployer
#     - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker-compose down"
#     - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker-compose up -d"
#   environment:
#     name: production
#     url: http://$SERVER_IP
#   only:
#     - master
#   when: manual
